import ctypes
import time
import threading
import pystray
from pystray import MenuItem as item, Icon
from PIL import Image, ImageDraw

# C·ªù gi·ªØ m√°y th·ª©c
ES_CONTINUOUS = 0x80000000
ES_SYSTEM_REQUIRED = 0x00000001

# Bi·∫øn tr·∫°ng th√°i
keep_awake = True  
tray_icon = None  

def prevent_sleep():
    """H√†m ch·∫°y n·ªÅn ƒë·ªÉ ngƒÉn m√°y sleep"""
    global keep_awake
    while True:
        if keep_awake:
            ctypes.windll.kernel32.SetThreadExecutionState(ES_CONTINUOUS | ES_SYSTEM_REQUIRED)
        time.sleep(60)

# B·∫Øt ƒë·∫ßu lu·ªìng ch·∫°y n·ªÅn
threading.Thread(target=prevent_sleep, daemon=True).start()

def create_icon_image(color):
    """T·∫°o h√¨nh icon v·ªõi m√†u t√πy ch·ªânh"""
    icon_image = Image.new("RGB", (64, 64), color)
    draw = ImageDraw.Draw(icon_image)
    draw.ellipse((10, 10, 54, 54), fill=(255, 255, 255))
    return icon_image

def update_tooltip():
    """C·∫≠p nh·∫≠t tooltip"""
    tray_icon.title = "üü¢ ƒêang b·∫≠t pc never die" if keep_awake else "üî¥ ƒê√£ t·∫Øt pc never die"

def toggle_awake(icon, item):
    """H√†m b·∫≠t/t·∫Øt ch·∫ø ƒë·ªô gi·ªØ m√°y th·ª©c"""
    global keep_awake, tray_icon
    keep_awake = not keep_awake
    tray_icon.icon = create_icon_image((0, 255, 0) if keep_awake else (255, 0, 0))  
    update_tooltip()
    icon.update_menu()  

def exit_program(icon, item):
    """H√†m tho√°t ch∆∞∆°ng tr√¨nh"""
    icon.stop()

def create_icon():
    """T·∫°o tray icon"""
    global tray_icon

    menu = (item(lambda text: f"B·∫≠t pc never die ({'‚úî' if keep_awake else '‚ùå'})", toggle_awake),
            item("Tho√°t", exit_program))

    tray_icon = Icon("keep_awake", create_icon_image((0, 255, 0)))
    tray_icon.menu = menu
    update_tooltip()  # Thi·∫øt l·∫≠p tooltip ban ƒë·∫ßu
    tray_icon.run()

# Ch·∫°y tray icon
create_icon()
